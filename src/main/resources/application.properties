# =============================================
# VIEW RESOLVER
# =============================================
 
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
server.servlet.context-path=/

#spring.datasource.jndi-name=java:comp/env/Mysql
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/world?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Europe/Moscow
spring.datasource.username=root
spring.datasource.password=112299

## Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

#email
spring.mail.host=smtp.mail.ru
spring.mail.port=587
spring.mail.username=z2007@list.ru
#spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#activemq
spring.activemq.in-memory=true
spring.activemq.pool.enabled=false

#rest
spring.data.rest.base-path=api

#log
spring.output.ansi.enabled=always
logging.level.root=info

#security
# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select name, password, enabled from user where name=?
spring.queries.roles-query=select u.name, r.name as role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.name=?

